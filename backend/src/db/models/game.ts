/** @module Models/Game */
import {
	BaseEntity,
	Column,
	CreateDateColumn,
	Entity,
	ManyToOne,
	PrimaryGeneratedColumn,
	Relation
} from "typeorm";
import {User} from "./user";

/**
 * Game model - This is for interacting with the game table
 * A user can have multiple games, as many as they chose to play
 * The goal of this model is to have the data generated by the user when playing that game to be stored here
 * 
 */
@Entity()
export class Game extends BaseEntity {
	@PrimaryGeneratedColumn()
	id: number;

	@Column()
	name: string;

	@Column()
	game_name: string;

	//I was going to have "score" as an entity as well in preparation for more advanced games,
	//But this is much simpler so we will leave it as it is. A consequence though is we need a date the score was achieved here too
	@Column()
	high_score: number;

	@Column()
	date_score_achieved: string;

	@ManyToOne((type) => User, (user: User) => user.games, {
		cascade: true,
		onDelete: "CASCADE"
	})
	user: Relation<User>;

	@CreateDateColumn()
	created_at: string;
}
